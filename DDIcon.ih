
/*
 * This file was generated by the SOM Compiler.
 * FileName: DDIcon.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emitih: 2.47
 */

/*
 *  =====================================================================#
 *                                                                       #
 *    A replacement class for WPIcon, which makes it possible to,change  #
 *    the icon of one or more objects, by droping them on an icon        #
 *    object.                                                            #
 *    Copyright (C) 1999 Jens Borch Christiansen                         #
 *                                                                       #
 *    This program is free software; you can redistribute it and/or      #
 *    modify it under the terms of the GNU General Public License as     #
 *    published by the Free Software Foundation; either version 2 of     #
 *    the License, or (at your option) any later version.                #
 *                                                                       #
 *    This program is distributed in the hope that it will be useful,    #
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of     #
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      #
 *    GNU General Public License for more details.                       #
 *                                                                       #
 *    You should have received a copy of the GNU General Public License  #
 *    along with this program; if not, write to the Free Software        #
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA           #
 *    02111-1307  USA                                                    #
 *                                                                       #
 *  =====================================================================#
 *  =====================================================================#
 *                                                                       #
 *   CLASS: DDIcon                                                       #
 *                                                                       #
 *   CLASS HIERARCHY:                                                    #
 *                                                                       #
 *       SOMObject                                                       #
 *         ÀÄÄ WPObject                                                  #
 *               ÀÄÄ WPFileSystem                                        #
 *                     ÀÄÄ WPDataFile                                    #
 *                           ÀÄÄ WPIcon                                  #
 *                                 ÀÄÄ DDIcon                            #
 *                                                                       #
 *   DESCRIPTION:                                                        #
 *                                                                       #
 *   A replacement class for WPIcon, which makes it possible to,change   #
 *   the icon of one or more objects, by droping them on an icon         #
 *   object.                                                             #
 *                                                                       #
 *  =====================================================================#
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_DDIcon_ih
#define SOM_DDIcon_ih

#pragma checkout(suspend)

/*
 * Passthru lines: File: "C.ih", "before"
 */

 /* PM and OS2 include directives */
   #define INCL_WIN
   #define INCL_DOS
   #define INCL_GPIBITMAPS
   #define INCL_DOSMODULEMGR
   #include <os2.h>

 /* WPS include directives */
   #define INCL_WPCLASS
   #define INCL_WPFOLDER
   #include <pmwp.h>

 /* C include directives */
   #include <stdio.h>

 /* General constants */
   #define THREAD_STACK_SIZE           8192
   #define BUFFERSIZE                  256

#include <DDIcon.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass DDIconCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define DDIcon_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void DDIconData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(DDIcon_Class_Source) || defined(SOM_Module_ddicon_Source))

/*
 * Trace/Debug macro
 */
#ifndef DDIconMethodDebug
   #define DDIconMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* DDIconMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_DDIconCClassData.parentMtab
#undef SOMInstance
#define SOMInstance DDIconCClassData.parentMtab

#ifndef M_DDIcon_Class_Source
   #define M_DDIcon_Class_Source
#endif    /* M_DDIcon_Class_Source */

/*
 * Overridden method: wpDragOver
 */
#pragma linkage(ico_wpDragOver, system)
SOM_Scope MRESULT  SOMLINK ico_wpDragOver(DDIcon *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo);
static char *somMN_DDIconwpDragOver = "WPObject::wpDragOver";
static somId somId_DDIconwpDragOver = &somMN_DDIconwpDragOver;
#ifdef somId_wpDragOver
#undef somId_wpDragOver
#else
#define somId_wpDragOver somId_DDIconwpDragOver
#endif
static somMethodProc* DDIcon_parent_WPIcon_wpDragOver_resolved;
#define DDIcon_parent_WPIcon_wpDragOver(somSelf,hwndCnr,pdrgInfo) \
  ((( somTD_WPObject_wpDragOver ) \
    DDIcon_parent_WPIcon_wpDragOver_resolved) \
	 (somSelf,hwndCnr,pdrgInfo))
#ifndef SOMGD_pmc_WPIcon_wpDragOver
  #ifdef parent_WPIcon_wpDragOver
     #undef parent_WPIcon_wpDragOver
     #define SOMGD_pmc_WPIcon_wpDragOver 1
  #else
     #define parent_WPIcon_wpDragOver DDIcon_parent_WPIcon_wpDragOver
  #endif /* parent_WPIcon_wpDragOver */
#endif /* SOMGD_pmc_WPIcon_wpDragOver */
#ifndef parent_wpDragOver
     #define parent_wpDragOver DDIcon_parent_WPIcon_wpDragOver
#endif  /* parent_wpDragOver */
#define DDIcon_parents_wpDragOver(somSelf,hwndCnr,pdrgInfo) (\
   DDIcon_parent_WPIcon_wpDragOver(somSelf,hwndCnr,pdrgInfo))

/*
 * Overridden method: wpDrop
 */
#pragma linkage(ico_wpDrop, system)
SOM_Scope MRESULT  SOMLINK ico_wpDrop(DDIcon *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
static char *somMN_DDIconwpDrop = "WPObject::wpDrop";
static somId somId_DDIconwpDrop = &somMN_DDIconwpDrop;
#ifdef somId_wpDrop
#undef somId_wpDrop
#else
#define somId_wpDrop somId_DDIconwpDrop
#endif
static somMethodProc* DDIcon_parent_WPIcon_wpDrop_resolved;
#define DDIcon_parent_WPIcon_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem) \
  ((( somTD_WPObject_wpDrop ) \
    DDIcon_parent_WPIcon_wpDrop_resolved) \
	 (somSelf,hwndCnr,pdrgInfo,pdrgItem))
#ifndef SOMGD_pmc_WPIcon_wpDrop
  #ifdef parent_WPIcon_wpDrop
     #undef parent_WPIcon_wpDrop
     #define SOMGD_pmc_WPIcon_wpDrop 1
  #else
     #define parent_WPIcon_wpDrop DDIcon_parent_WPIcon_wpDrop
  #endif /* parent_WPIcon_wpDrop */
#endif /* SOMGD_pmc_WPIcon_wpDrop */
#ifndef parent_wpDrop
     #define parent_wpDrop DDIcon_parent_WPIcon_wpDrop
#endif  /* parent_wpDrop */
#define DDIcon_parents_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem) (\
   DDIcon_parent_WPIcon_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem))

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(ico_wpModifyPopupMenu, system)
SOM_Scope BOOL  SOMLINK ico_wpModifyPopupMenu(DDIcon *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
static char *somMN_DDIconwpModifyPopupMenu = "WPObject::wpModifyPopupMenu";
static somId somId_DDIconwpModifyPopupMenu = &somMN_DDIconwpModifyPopupMenu;
#ifdef somId_wpModifyPopupMenu
#undef somId_wpModifyPopupMenu
#else
#define somId_wpModifyPopupMenu somId_DDIconwpModifyPopupMenu
#endif
static somMethodProc* DDIcon_parent_WPIcon_wpModifyPopupMenu_resolved;
#define DDIcon_parent_WPIcon_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
  ((( somTD_WPObject_wpModifyPopupMenu ) \
    DDIcon_parent_WPIcon_wpModifyPopupMenu_resolved) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#ifndef SOMGD_pmc_WPIcon_wpModifyPopupMenu
  #ifdef parent_WPIcon_wpModifyPopupMenu
     #undef parent_WPIcon_wpModifyPopupMenu
     #define SOMGD_pmc_WPIcon_wpModifyPopupMenu 1
  #else
     #define parent_WPIcon_wpModifyPopupMenu DDIcon_parent_WPIcon_wpModifyPopupMenu
  #endif /* parent_WPIcon_wpModifyPopupMenu */
#endif /* SOMGD_pmc_WPIcon_wpModifyPopupMenu */
#ifndef parent_wpModifyPopupMenu
     #define parent_wpModifyPopupMenu DDIcon_parent_WPIcon_wpModifyPopupMenu
#endif  /* parent_wpModifyPopupMenu */
#define DDIcon_parents_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) (\
   DDIcon_parent_WPIcon_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition))

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(ico_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK ico_wpMenuItemSelected(DDIcon *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
static char *somMN_DDIconwpMenuItemSelected = "WPObject::wpMenuItemSelected";
static somId somId_DDIconwpMenuItemSelected = &somMN_DDIconwpMenuItemSelected;
#ifdef somId_wpMenuItemSelected
#undef somId_wpMenuItemSelected
#else
#define somId_wpMenuItemSelected somId_DDIconwpMenuItemSelected
#endif
static somMethodProc* DDIcon_parent_WPIcon_wpMenuItemSelected_resolved;
#define DDIcon_parent_WPIcon_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
  ((( somTD_WPObject_wpMenuItemSelected ) \
    DDIcon_parent_WPIcon_wpMenuItemSelected_resolved) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPIcon_wpMenuItemSelected
  #ifdef parent_WPIcon_wpMenuItemSelected
     #undef parent_WPIcon_wpMenuItemSelected
     #define SOMGD_pmc_WPIcon_wpMenuItemSelected 1
  #else
     #define parent_WPIcon_wpMenuItemSelected DDIcon_parent_WPIcon_wpMenuItemSelected
  #endif /* parent_WPIcon_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPIcon_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
     #define parent_wpMenuItemSelected DDIcon_parent_WPIcon_wpMenuItemSelected
#endif  /* parent_wpMenuItemSelected */
#define DDIcon_parents_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) (\
   DDIcon_parent_WPIcon_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct DDIconClassDataStructure SOMDLINK DDIconClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct DDIconCClassDataStructure SOMDLINK DDIconCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t DDIconOM[] = {
    {    &somId_DDIconwpDragOver,
         (somMethodProc *) ico_wpDragOver    },
    {    &somId_DDIconwpDrop,
         (somMethodProc *) ico_wpDrop    },
    {    &somId_DDIconwpModifyPopupMenu,
         (somMethodProc *) ico_wpModifyPopupMenu    },
    {    &somId_DDIconwpMenuItemSelected,
         (somMethodProc *) ico_wpMenuItemSelected    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_DDIcon = "DDIcon";
#ifndef somEMC_M_DDIcon_defined
#define somEMC_M_DDIcon_defined
static char * somEMC_M_DDIcon = "M_DDIcon";
#endif
static char * somPCN_DDIcon_WPIcon = "WPIcon";

static somId somPCDDIcon[] = {
    &somPCN_DDIcon_WPIcon,
};

static somStaticClassInfo DDIconSCI = {
    4, 0, 4, 0, 0, 0,
    DDIcon_MajorVersion, DDIcon_MinorVersion,
    0, DDIcon_MaxNoMethods, 1,
    &somCN_DDIcon,
    &somEMC_M_DDIcon, 0,
    somPCDDIcon,
    (somClassDataStructure *) &DDIconClassData,
    (somCClassDataStructure *) &DDIconCClassData,
    (somStaticMethod_t *) NULL, DDIconOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK DDIconNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;

    if (_DDIcon && _somCheckVersion(_DDIcon, somtmajorVersion, somtminorVersion))
          return _DDIcon;
    WPIconNewClass(WPIcon_MajorVersion,WPIcon_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_DDIconNewClass(M_DDIcon_MajorVersion,M_DDIcon_MinorVersion);	/* static reference */
    result = somBuildClass(0xFFFFFFFF,&DDIconSCI, somtmajorVersion, somtminorVersion);
    DDIcon_parent_WPIcon_wpMenuItemSelected_resolved = 
	somParentNumResolve(DDIconCClassData.parentMtab, 1, WPObjectClassData.wpMenuItemSelected); 
    DDIcon_parent_WPIcon_wpModifyPopupMenu_resolved = 
	somParentNumResolve(DDIconCClassData.parentMtab, 1, WPObjectClassData.wpModifyPopupMenu); 
    DDIcon_parent_WPIcon_wpDrop_resolved = 
	somParentNumResolve(DDIconCClassData.parentMtab, 1, WPObjectClassData.wpDrop); 
    DDIcon_parent_WPIcon_wpDragOver_resolved = 
	somParentNumResolve(DDIconCClassData.parentMtab, 1, WPObjectClassData.wpDragOver); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_DDIcon_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_DDIcon_ih
#define SOM_M_DDIcon_ih

#pragma checkout(suspend)

#include <DDIcon.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_DDIconCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_DDIcon_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void M_DDIconData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(DDIcon_Class_Source) || defined(M_DDIcon_Class_Source) || defined(SOM_Module_ddicon_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_DDIconMethodDebug
   #define M_DDIconMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_DDIconMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_DDIconClassDataStructure SOMDLINK M_DDIconClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_DDIconCClassDataStructure SOMDLINK M_DDIconCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 *  Initializers for class Ids
 */
static char * somCN_M_DDIcon = "M_DDIcon";
static char * somPCN_M_DDIcon_M_WPIcon = "M_WPIcon";

static somId somPCM_DDIcon[] = {
    &somPCN_M_DDIcon_M_WPIcon,
};

static somStaticClassInfo M_DDIconSCI = {
    4, 0, 0, 0, 0, 0,
    M_DDIcon_MajorVersion, M_DDIcon_MinorVersion,
    0, M_DDIcon_MaxNoMethods, 1,
    &somCN_M_DDIcon,
    (somId) NULL, 1,
    somPCM_DDIcon,
    (somClassDataStructure *) &M_DDIconClassData,
    (somCClassDataStructure *) &M_DDIconCClassData,
    (somStaticMethod_t *) NULL, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_DDIconNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;

    if (_M_DDIcon && _somCheckVersion(_M_DDIcon, somtmajorVersion, somtminorVersion))
          return _M_DDIcon;
    M_WPIconNewClass(M_WPIcon_MajorVersion,M_WPIcon_MinorVersion);	/* static reference */
    result = somBuildClass(0xFFFFFFFF,&M_DDIconSCI, somtmajorVersion, somtminorVersion);
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_DDIcon_ih */
